// 无向连通图
// 如果存在两个奇点，则存在欧拉道路，开始于一个奇点，结束于另一个奇点
// 如果不存在奇点，则存在欧拉道路，从任意一点出发都可以回到，起点

// 有向连通图
// 如果只有两个点的入度不等于出度，且把出度比入度恰好大1的作为起点，把入度比出度大1的点作为终点，则构成欧拉道路
// 如果所有的点入度等于出度，则从任意一点出发都可以回到起点，构成欧拉回路

// 用dfs构造欧拉回路和欧拉道路
#include <stdio.h>
const int MAX = 100;
int n, vis[MAX][MAX], G[MAX][MAX];
void euler(int u)
{
    for(int v = 0; v < n; v++)
    {
        if(G[u][v] && !vis[u][v]){
            vis[u][v] = 1;
            euler(v);
            printf("%d %d\n", u, v);    //打印的顺序是逆序，可以将该边压入栈内
        }
    }
}